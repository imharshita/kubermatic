// Code generated by go-swagger; DO NOT EDIT.

package aks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"k8c.io/kubermatic/v2/pkg/test/e2e/utils/apiclient/models"
)

// ListAKSMDAvailableVersionsReader is a Reader for the ListAKSMDAvailableVersions structure.
type ListAKSMDAvailableVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAKSMDAvailableVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAKSMDAvailableVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListAKSMDAvailableVersionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAKSMDAvailableVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListAKSMDAvailableVersionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAKSMDAvailableVersionsOK creates a ListAKSMDAvailableVersionsOK with default headers values
func NewListAKSMDAvailableVersionsOK() *ListAKSMDAvailableVersionsOK {
	return &ListAKSMDAvailableVersionsOK{}
}

/* ListAKSMDAvailableVersionsOK describes a response with status code 200, with default header values.

MasterVersion
*/
type ListAKSMDAvailableVersionsOK struct {
	Payload []*models.MasterVersion
}

func (o *ListAKSMDAvailableVersionsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/providers/aks/versions][%d] listAKSMDAvailableVersionsOK  %+v", 200, o.Payload)
}
func (o *ListAKSMDAvailableVersionsOK) GetPayload() []*models.MasterVersion {
	return o.Payload
}

func (o *ListAKSMDAvailableVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAKSMDAvailableVersionsUnauthorized creates a ListAKSMDAvailableVersionsUnauthorized with default headers values
func NewListAKSMDAvailableVersionsUnauthorized() *ListAKSMDAvailableVersionsUnauthorized {
	return &ListAKSMDAvailableVersionsUnauthorized{}
}

/* ListAKSMDAvailableVersionsUnauthorized describes a response with status code 401, with default header values.

EmptyResponse is a empty response
*/
type ListAKSMDAvailableVersionsUnauthorized struct {
}

func (o *ListAKSMDAvailableVersionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/providers/aks/versions][%d] listAKSMDAvailableVersionsUnauthorized ", 401)
}

func (o *ListAKSMDAvailableVersionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAKSMDAvailableVersionsForbidden creates a ListAKSMDAvailableVersionsForbidden with default headers values
func NewListAKSMDAvailableVersionsForbidden() *ListAKSMDAvailableVersionsForbidden {
	return &ListAKSMDAvailableVersionsForbidden{}
}

/* ListAKSMDAvailableVersionsForbidden describes a response with status code 403, with default header values.

EmptyResponse is a empty response
*/
type ListAKSMDAvailableVersionsForbidden struct {
}

func (o *ListAKSMDAvailableVersionsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/providers/aks/versions][%d] listAKSMDAvailableVersionsForbidden ", 403)
}

func (o *ListAKSMDAvailableVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListAKSMDAvailableVersionsDefault creates a ListAKSMDAvailableVersionsDefault with default headers values
func NewListAKSMDAvailableVersionsDefault(code int) *ListAKSMDAvailableVersionsDefault {
	return &ListAKSMDAvailableVersionsDefault{
		_statusCode: code,
	}
}

/* ListAKSMDAvailableVersionsDefault describes a response with status code -1, with default header values.

errorResponse
*/
type ListAKSMDAvailableVersionsDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the list a k s m d available versions default response
func (o *ListAKSMDAvailableVersionsDefault) Code() int {
	return o._statusCode
}

func (o *ListAKSMDAvailableVersionsDefault) Error() string {
	return fmt.Sprintf("[GET /api/v2/projects/{project_id}/kubernetes/clusters/{cluster_id}/providers/aks/versions][%d] listAKSMDAvailableVersions default  %+v", o._statusCode, o.Payload)
}
func (o *ListAKSMDAvailableVersionsDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *ListAKSMDAvailableVersionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
